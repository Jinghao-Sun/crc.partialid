% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tib.R
\name{ci.tib}
\alias{ci.tib}
\title{Test Inversion Bootstrap Confidence Interval}
\usage{
ci.tib(
  mem_list,
  restriction_type = "pairwise",
  alpha = 0.05,
  multi_correction = 10,
  B = 5000,
  r_cond = c(1, 1, 2),
  t_cond = c(2, 3, 3),
  eta_cond = c(0.1, 0.1, 0.1),
  xi_cond = c(10, 10, 10),
  gamma = 0.1,
  verbose = F,
  lb = 0.8,
  ub = 3,
  tol = 0.1,
  search_step = 10,
  tasks = -1,
  ...
)
}
\arguments{
\item{mem_list}{A data.frame that contains the aggregated capture histories. For a
capture-recapture study with k samples, mem_list contains one row per observed capture
history followed by its frequency. mem_list has 2^k - 1 rows and k+1 columns, where the first k columns
can only have 0 or 1 (1 indicates captured in this sample), and the last column is the frequency.
See ./data/PWID_dev.RData for an example.}

\item{restriction_type}{A character string, either "pairwise" (for restrictions on the pairwise dependence),
or "highest" (for restrictions on the highest order interaction term lambda_c in a log-linear model).}

\item{alpha}{A real number between 0 and 1. Specify the confidence level 1-alpha.}

\item{multi_correction}{An integer. In the two step algorithm, beta is alpha/multi_correction.}

\item{B}{An integer. Number of bootstrap resamples.}

\item{r_cond}{A vector. Suppose there are restrictions on omega pairs of samples. r_cond is a vector of length omega.
It contains the indices of one end of the pairs.Ignored if restriction_type != "pairwise".}

\item{t_cond}{A vector. t_cond is a vector of length omega. It contains the indices of the other end of the pairs.
Ignored if restriction_type != "pairwise".}

\item{eta_cond}{A vector of length omega. Lower bound of the pairwise restrictions, corresponding to r_cond, t_cond.
Ignored if restriction_type != "pairwise".}

\item{xi_cond}{A vector. Upper bound of the pairwise restrictions, corresponding to r_cond, t_cond. Ignored if
restriction_type != "pairwise".}

\item{gamma}{A positive number. Restrictions on the  highest order interaction term lambda_c in a
log-linear model, such that lambda_c >= -gamma, lambda_c >= -gamma <= gamma. Ignored if restriction_type != "highest".}

\item{verbose}{A logical. If TRUE, print intermediate information of the computation.}

\item{lb}{A positive number. lb times the totals counts of the observed units will define the lower bound
the searching algorithm. Vary lb and ub to avoid local minimum.}

\item{ub}{A positive number. ub times the totals counts of the observed units will define the upper bound
the searching algorithm. Vary lb and ub to avoid local minimum.}

\item{tol}{A positive number. Tolerance/precision of the optimization algorithm when finding the endpoints of the
confidence interval.}

\item{search_step}{A psitive number. The length of interval of a grid on the positive real line, when testing all M's.}

\item{tasks}{An integer. Number of parallel jobs in bootstrap resampling. tasks = -1 will use all the available cores.}
}
\value{
(1 - alpha) confidence interval for the population size

1 - alpha confidence interval for the population size
}
\description{
Use bootstrap resampling techniques to compute the confidence interval for the population size M.
}
\examples{
CI = ci.tib(mem_list, restriction_type = "pairwise",eta_cond = c(0.5, 0.5, 0.5),
xi_cond = c(4, 4, 4), B = 100,
lb = 0.5, ub = 10, tol = 1e-2,
search_step = 30, tasks = 2, verbose = TRUE)

CI = ci.tib(mem_list, restriction_type = "highest", B = 500, gamma = 0.05,
lb = 0.5, ub = 20, tol = 1e-3,
search_step = 30, tasks = 2, verbose = TRUE)

print("123")
}
